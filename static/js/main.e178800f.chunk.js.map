{"version":3,"sources":["hooks/useAuth.js","components/Home.jsx","components/Login.jsx","components/Admin.jsx","components/Doc.jsx","utils/setValueAtIndex.js","components/CreateQuiz.jsx","components/Quizzes.jsx","components/Quiz.jsx","components/Register.jsx","components/ViewSubmission.jsx","components/EditQuiz.jsx","App.js","index.js"],"names":["AuthContext","createContext","localStorage","getItem","useAuth","useContext","AuthProvider","children","useState","token","setToken","useEffect","setItem","login","useCallback","username","password","a","fetch","method","headers","body","JSON","stringify","res","ok","Error","json","window","alert","register","useProvideAuth","Provider","value","Home","className","to","Login","push","useHistory","setUsername","setPassword","type","placeholder","onChange","target","onClick","Admin","apiCounts","setAPICounts","Authorization","console","log","fetchAdmin","length","id","map","apiName","count","split","endpoint","Doc","url","setValueAtIndex","arr","i","f","e","g","j","questionsReducer","questions","action","questionIndex","choiceIndex","toUpperCase","choices","isCorrect","question","rest","choice","CreateQuiz","quizName","setQuizName","useReducer","questionsDispatch","history","createQuiz","every","mode","checked","useStyles","makeStyles","mainContainer","gridArea","textAlign","paddingRight","btnContainer","paddingTop","btn","color","fontSize","transition","transform","Quizzes","classes","quizzes","setQuizzes","deleteQuiz","filter","fetchQuizzes","quizIndex","createdAt","toTake","pathname","toEdit","toView","IconButton","Quiz","useParams","setQuestions","postChoices","flatMap","isChecked","choiceID","score","fetchQuiz","questionID","questionBody","choiceBody","k","l","Register","confirmedPasword","setConfirmedPassword","ViewSubmission","submissions","setSubmissions","getSubmissions","date","submittedAt","substring","questionsArOnChangeHandler","questionsAr","qindex","cindex","EditQuiz","name","setName","newQuizBody","setNewQuizBody","newChoices","setNewChoices","showAddQuestion","setShowAddQuestion","updateName","updateQuestion","postQuestion","location","reload","deleteQuestion","getQuiz","index","App","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e178800f.chunk.js","sourcesContent":["import {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nconst AuthContext = createContext(localStorage.getItem('token'));\n\nconst useProvideAuth = () => {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token);\n    }\n  }, [token]);\n\n  const login = useCallback(\n    async (username, password) => {\n      try {\n        const res = await fetch(\n          'https://comp-4537-term-project-7zchu.ondigitalocean.app/auth/login',\n          {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n          }\n        );\n\n        if (!res.ok) {\n          throw new Error();\n        }\n\n        const { token } = await res.json();\n\n        setToken(token);\n      } catch (err) {\n        window.alert('Wrong credentials');\n      }\n    },\n    [setToken]\n  );\n\n  const register = useCallback(\n    async (username, password) => {\n      try {\n        const res = await fetch(\n          'https://comp-4537-term-project-7zchu.ondigitalocean.app/auth/register',\n          {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n          }\n        );\n\n        if (!res.ok) {\n          throw new Error();\n        }\n\n        const { token } = await res.json();\n\n        setToken(token);\n      } catch (err) {\n        window.alert('Username already existed!');\n      }\n    },\n    [setToken]\n  );\n\n  return { token, login, register };\n};\n\nconst useAuth = () => useContext(AuthContext);\n\nconst AuthProvider = ({ children }) => {\n  const { token, login, register } = useProvideAuth();\n\n  return (\n    <AuthContext.Provider value={{ token, login, register }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { useAuth, AuthProvider };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport Login from './Login';\nimport './Home.css'\n\nconst Home = () => {\n  const { token } = useAuth();\n\n  return token ? (\n    <nav>\n      <ul className={'listContainer'}>\n        <li className={'menuItem'}>\n          <Link className={'linkItem'} to='/admin'>Admin</Link>\n        </li>\n        <li className={'menuItem'}>\n          <Link className={'linkItem'} to='/quizzes'>Create quizzes</Link>\n        </li>\n        <li className={'menuItem'}>\n          <Link className={'linkItem'} to='/getquizzes'>View quizzes</Link>\n        </li>\n        {/* <li className={'menuItem'}>\n          <Link className={'linkItem'} to='/submissions'>View Submissions</Link>\n        </li> */}\n        <li className={'menuItem'}>\n          <Link className={'linkItem'} to='/create'>Create / Edit quizzes</Link>\n        </li>\n        <li className={'menuItem'}>\n          <Link className={'linkItem'} to='/docs'>Docs</Link>\n        </li>\n      </ul>\n    </nav>\n  ) : (\n    <Login />\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport Home from './Home';\n\nconst Login = () => {\n  const { push } = useHistory();\n  const { login, token } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Returns jsx here\n  return token ? (\n    <Home />\n  ) : (\n    <div>\n      <h1>Log in</h1>\n      <div>\n        <input\n          type='text'\n          value={username}\n          placeholder='Username'\n          onChange={({ target: { value } }) => setUsername(value)}\n        />\n      </div>\n\n      <div>\n        <input\n          type='password'\n          value={password}\n          placeholder='Password'\n          onChange={({ target: { value } }) => setPassword(value)}\n        />\n      </div>\n      <button onClick={() => login(username, password)}>Login</button>\n      <button onClick={() => push('/register')}>Register</button>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport './Admin.css';\nimport Login from './Login';\n\nconst Admin = () => {\n  const { token } = useAuth();\n  const [apiCounts, setAPICounts] = useState([]);\n\n  useEffect(() => {\n    const fetchAdmin = async () => {\n      try {\n        const res = await fetch(\n          'https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/admin',\n          { method: 'GET', headers: { Authorization: `bearer ${token}` } }\n        );\n\n        if (!res.ok) {\n          throw new Error('');\n        }\n        const { apiCounts } = await res.json();\n\n        console.log(apiCounts);\n        setAPICounts(apiCounts);\n      } catch (error) {\n        setAPICounts([]);\n      }\n    };\n\n    fetchAdmin();\n  }, [token]);\n\n  return token ? (\n    apiCounts.length > 0 ? (\n      <div id='container-admin'>\n        <h1 className={'adminTitle'}>Dash board</h1>\n        {apiCounts.map(({ apiName, count }) => {\n          const [method, endpoint] = apiName.split(' ');\n\n          return (\n            <div key={apiName} className={`container ${method}container`}>\n              <span className='method'>{method}</span>\n              <span className='endpoint'>{endpoint}</span>\n              <span className='count'>{count}</span>\n            </div>\n          );\n        })}\n      </div>\n    ) : (\n      <h1 className={'loadingTxt'}>Loading...</h1>\n    )\n  ) : (\n    <Login />\n  );\n};\n\nexport default Admin;\n","import React from 'react';\nimport SwaggerUI from 'swagger-ui-react';\nimport 'swagger-ui-react/swagger-ui.css';\n\nconst Doc = () => {\n  return (\n    <SwaggerUI url='https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/docs' />\n  );\n};\n\nexport default Doc;\n","const setValueAtIndex = (arr, i, f = (e) => e, g = (e) => e) =>\n  arr.map((e, j) => (i === j ? f(e) : g(e)));\n\nexport default setValueAtIndex;\n","import React, { useReducer, useState, useCallback } from 'react';\nimport { useHistory } from 'react-router';\nimport { useAuth } from '../hooks/useAuth';\nimport setValueAtIndex from '../utils/setValueAtIndex';\nimport './CreateQuiz.css';\nimport Login from './Login';\n\nconst questionsReducer = (\n  questions,\n  { action, questionIndex, choiceIndex, value }\n) => {\n  if (action.toUpperCase() === 'ADD_QUESTION') {\n    return [\n      ...questions,\n      { body: '', choices: [{ body: '', isCorrect: true }] },\n    ];\n  }\n\n  if (action.toUpperCase() === 'ADD_CHOICE') {\n    return setValueAtIndex(questions, questionIndex, ({ body, choices }) => ({\n      body,\n      choices: [...choices, { body: '', isCorrect: false }],\n    }));\n  }\n\n  if (action.toUpperCase() === 'QUESTION_BODY_CHANGE') {\n    return setValueAtIndex(questions, questionIndex, (question) => ({\n      ...question,\n      body: value,\n    }));\n  }\n\n  if (action.toUpperCase() === 'CHOICE_BODY_CHANGE') {\n    return questions.map(({ choices, ...rest }, i) => {\n      return {\n        ...rest,\n        choices:\n          i !== questionIndex\n            ? choices\n            : choices.map(({ body, ...choice }, j) => {\n                return {\n                  ...choice,\n                  body: j !== choiceIndex ? body : value,\n                };\n              }),\n      };\n    });\n  }\n\n  if (action.toUpperCase() === 'CHOICE_SELECT_CHANGE') {\n    return questions.map(({ choices, ...rest }, i) => {\n      return {\n        ...rest,\n        choices:\n          i !== questionIndex\n            ? choices\n            : choices.map((choice, j) => {\n                return {\n                  ...choice,\n                  isCorrect: j === choiceIndex,\n                };\n              }),\n      };\n    });\n  }\n\n  return [];\n};\n\nconst CreateQuiz = () => {\n  const [quizName, setQuizName] = useState('');\n\n  const [questions, questionsDispatch] = useReducer(questionsReducer, []);\n\n  const { token } = useAuth();\n\n  const history = useHistory();\n\n  const createQuiz = useCallback(async () => {\n    if (!quizName) {\n      setQuizName(\"Name can't be empty\");\n      return;\n    }\n\n    if (questions.length === 0) {\n      window.alert('There must be at least 1 questions');\n      return;\n    }\n\n    if (!questions.every(({ body }) => body)) {\n      window.alert(\"Question can't be empty\");\n      return;\n    }\n\n    if (!questions.every(({ choices }) => choices.every(({ body }) => body))) {\n      window.alert(\"Choices can't be empty\");\n      return;\n    }\n\n    if (!questions.every(({ choices }) => choices.length > 1)) {\n      window.alert('There must be at least 2 choices for each questions');\n      return;\n    }\n\n    await fetch(\n      'https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/quizzes/',\n      {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `bearer ${token}`,\n        },\n        body: JSON.stringify({ quizName, questions }),\n      }\n    );\n    window.alert('Added quiz');\n    setQuizName('');\n    history.push('/getquizzes');\n  }, [quizName, questions, token]);\n\n  return token ? (\n    <div className={'createQuizContainer'}>\n      <input\n        type='text'\n        className={'quiz-name'}\n        value={quizName}\n        placeholder='Enter name of quiz'\n        onChange={({ target: { value } }) => setQuizName(value)}\n      />\n      <br />\n      {questions.map(({ body, choices }, questionIndex) => {\n        return (\n          <div key={questionIndex}>\n            <h3 className={'questionIndex'}>Question {questionIndex + 1}</h3>\n            <input className={'decoRadioBtn'} type='radio' />\n            <textarea\n              className={'txtInput quiz-title'}\n              value={body}\n              placeholder='Enter question'\n              onChange={({ target: { value } }) => {\n                questionsDispatch({\n                  action: 'QUESTION_BODY_CHANGE',\n                  questionIndex,\n                  value,\n                });\n              }}\n            ></textarea>\n            <br />\n            {choices.map(({ isCorrect, body }, choiceIndex) => {\n              return (\n                <div className={'choiceContainer'} key={choiceIndex}>\n                  <input\n                    className={'radioBtn-createQuiz'}\n                    type='radio'\n                    checked={isCorrect}\n                    onChange={() => {\n                      questionsDispatch({\n                        action: 'CHOICE_SELECT_CHANGE',\n                        questionIndex,\n                        choiceIndex,\n                      });\n                    }}\n                  />\n                  <textarea\n                    className={'txtInput'}\n                    value={body}\n                    onChange={({ target: { value } }) => {\n                      questionsDispatch({\n                        action: 'CHOICE_BODY_CHANGE',\n                        questionIndex,\n                        choiceIndex,\n                        value,\n                      });\n                    }}\n                  ></textarea>\n                </div>\n              );\n            })}\n            <button\n              className={'addBtn'}\n              key={`button-${questionIndex}`}\n              onClick={() =>\n                questionsDispatch({ action: 'ADD_CHOICE', questionIndex })\n              }\n            >\n              Add a choice\n            </button>\n            <hr />\n          </div>\n        );\n      })}\n      <button\n        className={'addBtn'}\n        onClick={() => questionsDispatch({ action: 'ADD_QUESTION' })}\n      >\n        Add question\n      </button>\n      <button className={'addBtn addQuiz'} onClick={createQuiz}>\n        Add Quiz\n      </button>\n    </div>\n  ) : (\n    <Login />\n  );\n};\n\nexport default CreateQuiz;\n","import { useCallback, useState, useEffect } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport { Link } from 'react-router-dom';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Login from './Login';\nimport './Quizzes.css';\n\nconst useStyles = makeStyles({\n  mainContainer: {\n    gridArea: 'deleteBtn',\n    textAlign: 'right',\n    paddingRight: '3em',\n  },\n\n  btnContainer: {\n    paddingRight: '0',\n    paddingTop: '0',\n  },\n\n  btn: {\n    color: 'white',\n    fontSize: '1.5em',\n    transition: 'all .6s ease-out',\n    '&:hover': {\n      transform: 'scale(1.7)',\n      color: '#a80000',\n    },\n  },\n});\n\nconst Quizzes = () => {\n  const classes = useStyles();\n\n  const [quizzes, setQuizzes] = useState([]);\n  const { token } = useAuth();\n\n  const deleteQuiz = useCallback(\n    async (id) => {\n      console.log('in delete');\n      const res = await fetch(\n        `https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/quizzes/${id}`,\n        {\n          method: 'DELETE',\n          mode: 'cors',\n          headers: {\n            Authorization: `bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      window.alert('Quiz deleted');\n      setQuizzes((quizzes) =>\n        quizzes.filter(({ id: quizID }) => quizID !== id)\n      );\n    },\n    [token, setQuizzes]\n  );\n\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      const res = await fetch(\n        'https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/quizzes',\n        { method: 'GET', headers: { Authorization: `bearer ${token}` } }\n      );\n\n      const quizzes = await res.json();\n\n      console.log(quizzes);\n      setQuizzes(quizzes);\n    };\n\n    fetchQuizzes();\n  }, [token]);\n\n  if (!token) {\n    return <Login />;\n  }\n\n  if (quizzes.length === 0) {\n    return <h1 className='pageTitle'>No quizzes yet. Go create a new one!</h1>;\n  }\n\n  return token ? (\n    <div className={'wholeWrapper'}>\n      <h1 className={'pageTitle'}>Quiz List - Quizzes</h1>\n      {quizzes.map(({ id, quizName, createdAt }, quizIndex) => {\n        const toTake = {\n          pathname: `/quiz/${id}`,\n        };\n\n        const toEdit = {\n          pathname: `/edit/${id}`,\n        };\n\n        const toView = {\n          pathname: `/submissions/${id}`,\n        };\n\n        return (\n          <div className={'gridContainer'} key={`quiz-${id}`}>\n            <div\n              className={`deleteBtnContainer ${classes.mainContainer}`}\n              onClick={() => deleteQuiz(id)}\n            >\n              <IconButton className={classes.btnContainer}>\n                <CancelIcon className={classes.btn} />\n              </IconButton>\n            </div>\n            <h5 className={'indexSection'}>{quizIndex + 1}</h5>\n            <h3 className={'nameSection'}>{quizName}</h3>\n            <h4 className={'dateSection'}>{createdAt}</h4>\n            <div className={'cardMenuContainer'}>\n              <nav>\n                <ul className={'cardUL'}>\n                  <li className={'menuList'}>\n                    <Link className={'link'} to={toTake}>\n                      Take Quiz\n                    </Link>\n                  </li>\n                  <li className={'menuList'}>\n                    <Link className={'link'} to={toEdit}>\n                      Edit Quiz\n                    </Link>\n                  </li>\n                  <li className={'menuList'}>\n                    <Link className={'link'} to={toView}>\n                      View Submission\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <Login />\n  );\n};\n\nexport default Quizzes;\n","import { useEffect, useState, useCallback } from 'react';\nimport { useParams } from 'react-router';\nimport { useAuth } from './../hooks/useAuth';\nimport './Quiz.css';\n\nconst Quiz = () => {\n  const { token } = useAuth();\n  const { id } = useParams();\n\n  const [quizName, setQuizName] = useState('');\n  const [questions, setQuestions] = useState([]);\n\n  const postChoices = useCallback(async () => {\n    // validations\n    //\n\n    console.log(questions);\n    const choices = questions.flatMap(({ choices }) => {\n      return choices\n        .filter(({ isChecked }) => isChecked)\n        .flatMap(({ choiceID }) => choiceID);\n    });\n\n    console.log(choices);\n\n    const res = await fetch(\n      `https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/submissions/${id}`,\n      {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `bearer ${token}`,\n        },\n        body: JSON.stringify({ choices }),\n      }\n    );\n\n    if (!res.ok) {\n      return;\n    }\n\n    const { score } = await res.json();\n\n    window.alert(`Your score is ${score}`);\n\n    setQuestions(\n      questions.map(({ choices, ...rest }) => ({\n        ...rest,\n        choices: choices.map((choice) => ({ ...choice, isChecked: false })),\n      }))\n    );\n  }, [questions, id, token]);\n\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      console.log('CHECKPOINT  ' + id);\n      const res = await fetch(\n        `https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/quizzes/${id}`,\n        {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: `bearer ${token}`,\n          },\n        }\n      );\n\n      const { quizName, questions } = await res.json();\n\n      console.log(questions);\n      console.log(quizName);\n\n      setQuizName(quizName);\n      console.log(quizName);\n      setQuestions(\n        questions.map(({ choices, ...question }) => ({\n          ...question,\n          choices: choices.map((choice) => ({ ...choice, isChecked: false })),\n        }))\n      );\n    };\n\n    fetchQuiz();\n  }, [id, token]);\n\n  return (\n    <div className={'quizWrapper'}>\n      <h2 className={'quizTitle'}>{quizName}</h2>\n      {questions.map(({ questionID, questionBody, choices }, i) => {\n        return (\n          <div className={'questionWrapper'} key={questionID}>\n            <h3 className={'questionNumber'}>{i + 1}</h3>\n            <h3 className={'questionTitle'}>{questionBody}</h3>\n            {choices.map(({ choiceID, choiceBody, isChecked }, j) => {\n              return (\n                <div className={'choiceWrapper'} key={choiceID}>\n                  <input\n                    className={'radioBtn'}\n                    type='radio'\n                    checked={isChecked}\n                    onChange={() => {\n                      setQuestions(\n                        questions.map(({ choices, ...rest }, k) => {\n                          return {\n                            ...rest,\n                            choices:\n                              k !== i\n                                ? choices\n                                : choices.map((choice, l) => {\n                                    return {\n                                      ...choice,\n                                      isChecked: l === j,\n                                    };\n                                  }),\n                          };\n                        })\n                      );\n                    }}\n                  />\n                  <span className={'choiceText'}>{choiceBody}</span>\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n      <button className={'submitBtn'} onClick={postChoices}>\n        Submit\n      </button>\n    </div>\n  );\n};\n\nexport default Quiz;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useAuth } from '../hooks/useAuth';\nimport Home from './Home';\n\nconst Register = () => {\n  const { push } = useHistory();\n  const { register, token } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmedPasword, setConfirmedPassword] = useState('');\n\n  return token ? (\n    <Home />\n  ) : (\n    <div>\n      <div>\n        <input\n          type='text'\n          value={username}\n          placeholder='Username'\n          onChange={({ target: { value } }) => setUsername(value)}\n        />\n      </div>\n\n      <div>\n        <input\n          type='password'\n          value={password}\n          placeholder='Password'\n          onChange={({ target: { value } }) => setPassword(value)}\n        />\n      </div>\n\n      <div>\n        <input\n          type='password'\n          value={confirmedPasword}\n          placeholder='Confirm password'\n          onChange={({ target: { value } }) => setConfirmedPassword(value)}\n        />\n      </div>\n\n      <button\n        onClick={() => {\n          if (!password) {\n            window.alert(\"Password can't be empty\");\n            setPassword('');\n            setConfirmedPassword('');\n            return;\n          }\n\n          if (password !== confirmedPasword) {\n            window.alert(\"Passwords don't match\");\n            setPassword('');\n            setConfirmedPassword('');\n            return;\n          }\n\n          if (!username) {\n            window.alert(\"Username can't be empty\");\n            setUsername('');\n          }\n\n          register(username, password);\n        }}\n      >\n        Register\n      </button>\n      <button onClick={() => push('/login')}>Login</button>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { useAuth } from '../hooks/useAuth';\nimport Login from './Login';\nimport './ViewSubmission.css';\n\nconst ViewSubmission = () => {\n  const [submissions, setSubmissions] = useState([]);\n\n  const { id } = useParams();\n\n  const { token } = useAuth();\n\n  useEffect(() => {\n    const getSubmissions = async () => {\n      const res = await fetch(\n        `https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/submissions/${id}`,\n        {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: `bearer ${token}`,\n          },\n        }\n      );\n\n      console.log('checking point ' + id);\n\n      const submissions = await res.json();\n      console.log(submissions);\n\n      setSubmissions(submissions);\n    };\n\n    getSubmissions();\n  }, [id, token]);\n\n  console.log('test');\n  console.log(submissions);\n  return token ? (\n    <div>\n      <div className={'submissionWrapper'}>\n        {submissions.length > 0 ? (\n          submissions.map((e) => {\n            const date = e.submittedAt.substring(0, 10);\n\n            console.log(typeof date);\n            console.log(date);\n\n            return (\n              <div className={'submissionCard'}>\n                <h1 className={'submissionCardusername'}>{e.username}</h1>\n                <h1 key={e.id} className={'submissionCardScore'}>\n                  score: {e.score}\n                </h1>\n                <h3 className={'submissionCardDate'}>\n                  Submitted Date:{' '}\n                  <span className={'yearText'}>(yyyy-mm-dd)</span>\n                  {date}\n                </h3>\n              </div>\n            );\n          })\n        ) : (\n          <h1>No Submissions Yet</h1>\n        )}\n      </div>\n    </div>\n  ) : (\n    <Login />\n  );\n};\n\nexport default ViewSubmission;\n","import React, { useState, useCallback, useEffect, useReducer } from 'react';\nimport { useAuth } from '../hooks/useAuth';\nimport Login from './Login';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst questionsArOnChangeHandler = (\n  questionsAr,\n  { action, questionIndex, choiceIndex, value, questions, question }\n) => {\n  if (action.toUpperCase() === 'CHOICE_BODY_CHANGE') {\n    return questionsAr.map(({ choices, ...rest }, qindex) => {\n      return {\n        ...rest,\n        choices:\n          qindex !== questionIndex\n            ? choices\n            : choices.map(({ choiceBody, ...rest }, cindex) => {\n                return {\n                  ...rest,\n                  choiceBody: cindex !== choiceIndex ? choiceBody : value,\n                };\n              }),\n      };\n    });\n  }\n\n  if (action.toUpperCase() === 'CHOICE_SELECT_CHANGE') {\n    return questionsAr.map(({ choices, ...rest }, qindex) => {\n      return {\n        ...rest,\n        choices:\n          qindex !== questionIndex\n            ? choices\n            : choices.map(({ isCorrect, ...rest }, cindex) => {\n                return {\n                  ...rest,\n                  isCorrect: cindex === choiceIndex,\n                };\n              }),\n      };\n    });\n  }\n\n  if (action.toUpperCase() === 'QUESTION_BODY_CHANGE') {\n    return questionsAr.map(({ questionBody, ...rest }, qindex) => {\n      return {\n        ...rest,\n        questionBody: qindex === questionIndex ? value : questionBody,\n      };\n    });\n  }\n\n  if (action.toUpperCase() === 'ADDED_QUESTION') {\n    return [...questionsAr, question];\n  }\n\n  if (action.toUpperCase() === 'GET_QUESTIONS') {\n    return questions;\n  }\n\n  return questionsAr;\n};\n\nconst EditQuiz = () => {\n  const { id } = useParams();\n  const { token } = useAuth();\n\n  const [name, setName] = useState('');\n  const [questionsAr, questionsDispatch] = useReducer(\n    questionsArOnChangeHandler,\n    []\n  );\n\n  const [newQuizBody, setNewQuizBody] = useState('');\n  const [newChoices, setNewChoices] = useState([]);\n\n  const [showAddQuestion, setShowAddQuestion] = useState(true);\n\n  const addQuestionClickHandler = () => {\n    setShowAddQuestion(!showAddQuestion);\n    setNewChoices([{ body: '', isCorrect: true }]);\n  };\n\n  const addChoiceClickHandler = () => {\n    setNewChoices([...newChoices, { body: '', isCorrect: false }]);\n  };\n\n  const updateName = useCallback(async () => {\n    if (!name) {\n      setName(\"Name can't be empty\");\n      return;\n    }\n\n    // console.log(name)\n    await fetch(\n      `https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/quizzes/${id}`,\n      {\n        method: 'PUT',\n        mode: 'cors',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: `bearer ${token}`,\n        },\n        body: JSON.stringify({ quizName: name }),\n      }\n    );\n    window.alert('Name changed');\n  }, [name, setName, id, token]);\n\n  const updateQuestion = useCallback(\n    async (questionID, questionIndex, questionBody, choices) => {\n      console.log('Question ID: ' + questionID);\n      console.log('Question body: ' + questionBody);\n      console.log('Choices: \\n' + JSON.stringify(choices));\n\n      await fetch(\n        `https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/questions/${questionID}`,\n        {\n          method: 'PUT',\n          mode: 'cors',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: `bearer ${token}`,\n          },\n          body: JSON.stringify({ body: questionBody, choices: choices }),\n        }\n      );\n\n      window.alert(`#${questionIndex} Question changed`);\n    },\n    [token]\n  );\n\n  const postQuestion = useCallback(async () => {\n    // console.log(newQuizBody);\n    // console.log(newChoices);\n    // console.log({\n    //   questionBody: newQuizBody,\n    //   choices: newChoices,\n    // });\n    if (!newQuizBody) {\n      setNewQuizBody(\"Name can't be empty\");\n      return;\n    }\n\n    if (newChoices.length < 2) {\n      window.alert('There must be at least 2 choice');\n      return;\n    }\n\n    if (!newChoices.every(({ body }) => body)) {\n      window.alert(\"Choice can't be empty\");\n      return;\n    }\n\n    if (newChoices.filter(({ isCorrect }) => isCorrect).length === 0) {\n      window.alert('There must be only 1 answer choice for this question');\n      return;\n    }\n\n    // const res =\n    await fetch(\n      `https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/questions/${id}`,\n      {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: `bearer ${token}`,\n        },\n        body: JSON.stringify({\n          questionBody: newQuizBody,\n          choices: newChoices,\n        }),\n      }\n    );\n\n    // console.log(\"attention here\");\n    // console.log(await res.json());\n\n    window.alert('Question added');\n\n    setNewQuizBody('');\n    setNewChoices([]);\n    setShowAddQuestion(true);\n\n    window.location.reload();\n  }, [newChoices, newQuizBody, token, id, setNewChoices, setNewQuizBody]);\n\n  const deleteQuestion = useCallback(\n    async (questionID) => {\n      await fetch(\n        `https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/questions/${questionID}`,\n        {\n          method: 'DELETE',\n          mode: 'cors',\n          headers: {\n            Authorization: `bearer ${token}`,\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      window.alert('Question Deleted :(');\n      window.location.reload();\n    },\n    [token]\n  );\n\n  useEffect(() => {\n    const getQuiz = async () => {\n      console.log('CHECKPOINT ' + id);\n\n      const res = await fetch(\n        `https://comp-4537-term-project-7zchu.ondigitalocean.app/api/v0/quizzes/${id}?showAnswers=true`,\n        {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: `bearer ${token}`,\n          },\n        }\n      );\n\n      // returns quizID, quizName, questions\n      // console.log(await res.json());\n      const { quizName, questions } = await res.json();\n\n      console.log(quizName);\n      console.log(questions);\n\n      setName(quizName);\n\n      questionsDispatch({ action: 'GET_QUESTIONS', questions });\n      // questionsArDispatch(questions);\n    };\n\n    getQuiz();\n  }, [id, token]);\n\n  console.log(questionsAr);\n\n  return token ? (\n    <div className={'quizWrapper'}>\n      <input\n        type='text'\n        value={name}\n        placeholder='Enter name of quiz'\n        onChange={({ target: { value } }) => setName(value)}\n      />\n      <button onClick={updateName}>Change name</button>\n      {(questionsAr ?? []).map(\n        ({ questionID, questionBody, choices }, questionIndex) => {\n          // console.log(\"hello testing \" + questionIndex)\n          return (\n            <div key={questionID}>\n              <h1>{questionIndex + 1}</h1>\n              <input type='radio' className={'decoRadioBtn'} />\n              <textarea\n                value={questionBody}\n                onChange={({ target: { value } }) => {\n                  questionsDispatch(questionsAr, {\n                    action: 'QUESTION_BODY_CHANGE',\n                    questionIndex,\n                    value,\n                  });\n                }}\n              ></textarea>\n              {choices.map(\n                ({ choiceBody, isCorrect, choiceID }, choiceIndex) => {\n                  return (\n                    <div key={choiceID}>\n                      <div>\n                        <input\n                          type='radio'\n                          checked={isCorrect}\n                          onChange={() => {\n                            questionsDispatch(questionsAr, {\n                              action: 'CHOICE_SELECT_CHANGE',\n                              questionIndex,\n                              choiceIndex,\n                            });\n                          }}\n                        />\n                        <textarea\n                          value={choiceBody}\n                          onChange={({ target: { value } }) => {\n                            questionsDispatch(questionsAr, {\n                              action: 'CHOICE_BODY_CHANGE',\n                              questionIndex,\n                              choiceIndex,\n                              value,\n                            });\n                            console.log(questionsAr);\n                          }}\n                        ></textarea>\n                      </div>\n                    </div>\n                  );\n                }\n              )}\n              <button\n                onClick={() => {\n                  updateQuestion(\n                    questionID,\n                    questionIndex,\n                    questionBody,\n                    choices\n                  );\n                }}\n              >\n                Change question\n              </button>\n              <br />\n              <button\n                onClick={() => {\n                  deleteQuestion(questionID);\n                }}\n              >\n                Delete question\n              </button>\n            </div>\n          );\n        }\n      )}\n      {!showAddQuestion ? (\n        <div>\n          <input type='radio' className={'decoRadioBtn'} />\n          <textarea\n            placeholder='Enter question'\n            value={newQuizBody}\n            onChange={({ target: { value } }) => {\n              setNewQuizBody(value);\n              // console.log(newQuizBody);\n            }}\n          ></textarea>\n\n          {newChoices.map(({ body, isCorrect }, i) => {\n            return (\n              <div key={i}>\n                <input\n                  type='radio'\n                  checked={isCorrect}\n                  onChange={() => {\n                    setNewChoices(\n                      newChoices.map(({ isCorrect, ...rest }, index) => {\n                        return {\n                          ...rest,\n                          isCorrect: index === i,\n                        };\n                      })\n                    );\n                  }}\n                />\n                <textarea\n                  value={body}\n                  onChange={({ target: { value } }) => {\n                    setNewChoices(\n                      newChoices.map(({ body, ...rest }, index) => {\n                        return {\n                          ...rest,\n                          body: index !== i ? body : value,\n                        };\n                      })\n                    );\n                  }}\n                ></textarea>\n              </div>\n            );\n          })}\n          <br />\n          <button onClick={addChoiceClickHandler}>Add choice</button>\n          <button onClick={postQuestion}>Submit</button>\n        </div>\n      ) : (\n        <button onClick={addQuestionClickHandler}>Add question</button>\n      )}\n    </div>\n  ) : (\n    <Login />\n  );\n};\n\nexport default EditQuiz;\n","import React from 'react';\nimport {\n  HashRouter,\n  // BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Admin from './components/Admin';\nimport Doc from './components/Doc';\nimport Home from './components/Home';\nimport CreateQuiz from './components/CreateQuiz';\nimport Quizzes from './components/Quizzes';\nimport Quiz from './components/Quiz';\nimport { AuthProvider } from './hooks/useAuth';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport ViewSubmission from './components/ViewSubmission';\nimport EditQuiz from './components/EditQuiz';\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <HashRouter basename='/'>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/admin' exact component={Admin} />\n          <Route path='/docs' exact component={Doc} />\n          <Route path='/quizzes' exact component={CreateQuiz} />\n          <Route path='/getquizzes' exact component={Quizzes} />\n          <Route path='/login' exact component={Login} />\n          <Route path='/register' exact component={Register} />\n          <Route path='/quiz/:id' exact component={Quiz} />\n          <Route path='/submissions/:id' exact component={ViewSubmission} />\n          <Route path='/edit/:id' exact component={EditQuiz} />\n        </Switch>\n      </HashRouter>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}